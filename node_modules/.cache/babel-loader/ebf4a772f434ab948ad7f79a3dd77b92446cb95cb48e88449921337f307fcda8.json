{"ast":null,"code":"var _jsxFileName = \"E:\\\\Faculdade\\\\REACT-Fran_Artesanato-BD_Remoto\\\\REACT-Site-Fran_Artesanato-Sem_Nada\\\\fram-artesanato\\\\frontend\\\\src\\\\pages\\\\GerenciarProdutos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GerenciarProdutos = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    NomeProduto: '',\n    ValorProduto: '',\n    DescricaoProduto: '',\n    ImgProduto: '',\n    idproduto: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSave = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/produto', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          NomeProduto: formData.NomeProduto,\n          ValorProduto: formData.ValorProduto,\n          DescricaoProduto: formData.DescricaoProduto,\n          ImgProduto: formData.ImgProduto\n        })\n      });\n      const data = await response.json();\n      alert(data.message || 'Produto criado com sucesso!');\n    } catch (error) {\n      alert('Erro ao criar produto!');\n    }\n  };\n  const handleUpdate = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/produto/${formData.idproduto}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          NomeProduto: formData.NomeProduto,\n          ValorProduto: formData.ValorProduto,\n          DescricaoProduto: formData.DescricaoProduto,\n          ImgProduto: formData.ImgProduto\n        })\n      });\n      const data = await response.json();\n      alert(data.message || 'Produto atualizado com sucesso!');\n    } catch (error) {\n      alert('Erro ao atualizar produto!');\n    }\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:3000/produto/${formData.idproduto}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      alert(data.message || 'Produto excluído com sucesso!');\n    } catch (error) {\n      alert('Erro ao excluir produto!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"principal margin_fixed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(GerenciarProdutos, \"uwtujOzwzIA8i128A6IzBpA+KK8=\");\n_c = GerenciarProdutos;\nexport default GerenciarProdutos;\nvar _c;\n$RefreshReg$(_c, \"GerenciarProdutos\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GerenciarProdutos","_s","formData","setFormData","NomeProduto","ValorProduto","DescricaoProduto","ImgProduto","idproduto","handleInputChange","e","name","value","target","handleSave","response","fetch","method","headers","body","JSON","stringify","data","json","alert","message","error","handleUpdate","handleDelete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Faculdade/REACT-Fran_Artesanato-BD_Remoto/REACT-Site-Fran_Artesanato-Sem_Nada/fram-artesanato/frontend/src/pages/GerenciarProdutos.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst GerenciarProdutos = () => {\r\n  const [formData, setFormData] = useState({\r\n    NomeProduto: '',\r\n    ValorProduto: '',\r\n    DescricaoProduto: '',\r\n    ImgProduto: '',\r\n    idproduto: '',\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/produto', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          NomeProduto: formData.NomeProduto,\r\n          ValorProduto: formData.ValorProduto,\r\n          DescricaoProduto: formData.DescricaoProduto,\r\n          ImgProduto: formData.ImgProduto,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      alert(data.message || 'Produto criado com sucesso!');\r\n    } catch (error) {\r\n      alert('Erro ao criar produto!');\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/produto/${formData.idproduto}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          NomeProduto: formData.NomeProduto,\r\n          ValorProduto: formData.ValorProduto,\r\n          DescricaoProduto: formData.DescricaoProduto,\r\n          ImgProduto: formData.ImgProduto,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      alert(data.message || 'Produto atualizado com sucesso!');\r\n    } catch (error) {\r\n      alert('Erro ao atualizar produto!');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/produto/${formData.idproduto}`, {\r\n        method: 'DELETE',\r\n      });\r\n      const data = await response.json();\r\n      alert(data.message || 'Produto excluído com sucesso!');\r\n    } catch (error) {\r\n      alert('Erro ao excluir produto!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <main className=\"principal margin_fixed\">\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GerenciarProdutos;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCV,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACS,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,WAAW,EAAEF,QAAQ,CAACE,WAAW;UACjCC,YAAY,EAAEH,QAAQ,CAACG,YAAY;UACnCC,gBAAgB,EAAEJ,QAAQ,CAACI,gBAAgB;UAC3CC,UAAU,EAAEL,QAAQ,CAACK;QACvB,CAAC;MACH,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,6BAA6B,CAAC;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCd,QAAQ,CAACM,SAAS,EAAE,EAAE;QAClFS,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBjB,WAAW,EAAEF,QAAQ,CAACE,WAAW;UACjCC,YAAY,EAAEH,QAAQ,CAACG,YAAY;UACnCC,gBAAgB,EAAEJ,QAAQ,CAACI,gBAAgB;UAC3CC,UAAU,EAAEL,QAAQ,CAACK;QACvB,CAAC;MACH,CAAC,CAAC;MACF,MAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,iCAAiC,CAAC;IAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCd,QAAQ,CAACM,SAAS,EAAE,EAAE;QAClFS,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMK,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCC,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,+BAA+B,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA8B,QAAA,eACE9B,OAAA;MAAM+B,SAAS,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjC,EAAA,CAvEID,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AAyEvB,eAAeA,iBAAiB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}